package requiredjava;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.StringTokenizer;

import org.apache.hadoop.fs.FileStatus;

public class FileTrimOperation {
	
	private static StringTokenizer st;
	
	public static int[] decorate(String fileDir, String fileName, String date, FileStatus[] filesList) throws IOException{
		
		// Read from temporary file
		String tempFile = fileDir+"/"+fileName;
		String filesListNames[] = new String[filesList.length];
		int filesListsCount[] = new int[filesList.length];
		
		BufferedReader br = new BufferedReader(new FileReader(tempFile));
		FileWriter[] fw = new FileWriter[filesList.length];
		
		for(int i=0; i<filesListNames.length; ++i){
			filesListsCount[i] = 0;
			filesListNames[i] = filesList[i].getPath().getName();
			fw[i] = new FileWriter(fileDir+"/"+filesListNames[i]+"_"+date);
		}
		
		String str;
		while ((str = br.readLine()) != null) {
			if(!(str = str.trim()).equals("")){
				st = new StringTokenizer(str, "\t");
				
				str = st.nextToken();
				
				for(int i=0; i<filesListNames.length; ++i){
					if(filesListNames[i].equals(str)){
						fw[i].write(st.nextToken() + "\t" + st.nextToken() + "\t" + st.nextToken() + "\n");
						++filesListsCount[i];
						break;
					}
				}
			}
		}
		
		br.close();
		for(FileWriter temp: fw)
			temp.close();
		
		(new File(tempFile)).delete();
		
		for(int i=0; i<filesListsCount.length; ++i)
			if(filesListsCount[i]==0)
				(new File(fileDir+"/"+filesListNames[i]+"_"+date)).delete();
		
		return filesListsCount;
	}
}
